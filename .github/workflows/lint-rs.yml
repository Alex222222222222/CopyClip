# Installs Rust and checks formatting + linting

name: Lint Rust

on:
  pull_request:
    paths-ignore:
      - "package.json"
      - "package-lock.json"
      - "yarn.lock"
      - "pnpm-lock.yaml"
      - "README.md"

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository co
        uses: actions/checkout@v3

      - name: set up rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt install libdbus-1-dev libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev xcb libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev libxcb-xfixes0-dev

      - name: Create empty 'dist' directory
        run: mkdir dist
      
      - name: Run rustfmt check
        run: cargo fmt --all -- --check
        working-directory: ./

      - name: Run clippy check and deny warnings
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: ./

      - name: Run clippy check and deny warnings
        run: cargo clippy --all-targets --all-features -- -D warnings
        working-directory: src-tauri
