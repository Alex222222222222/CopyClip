# build the app for pre-release

name: Pre-release Build

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    name: build for pre-release
    if: github.event.pull_request.merged == true
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Disable git core.autocrlf on Windows
        if: matrix.os == 'windows-latest'
        run: git config --global core.autocrlf false

      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt install libdbus-1-dev libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Set up pnpm package manager
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Set up Node.js LTS v16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"

      - name: set up rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install dependencies from lockfile
        run: pnpm install --frozen-lockfile

      - name: Create empty 'out' directory
        run: mkdir out

      - name: pnpm prepare
        run: pnpm prepare
      
      - name: pnpm build
        run: pnpm build
      
      - if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-prerelease
          path: src-tauri/target/release/bundle/msi

      - if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-prerelease
          path: src-tauri/target/release/bundle/dmg

      - if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-prerelease
          path: src-tauri/target/release/bundle/deb/