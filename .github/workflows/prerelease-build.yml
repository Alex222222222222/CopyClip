# build the app for pre-release

name: Pre-release Build

on:
  pull_request:
    types:
      - closed

jobs:
  build:
    name: build for pre-release
    if: github.event.pull_request.merged == true
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt install libdbus-1-dev libwebkit2gtk-4.0-dev build-essential curl wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev xcb libxcb-randr0-dev libxcb-xtest0-dev libxcb-xinerama0-dev libxcb-shape0-dev libxcb-xkb-dev libxcb-xfixes0-dev

      - name: set up rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: set up pnpm cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.pnpm-store
            node_modules
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt, clippy
      
      - run: |
          cargo --version
          rustc --version

      - run: |
          if ( cargo tauri --help )
          then
            echo "tauri already installed"
          else
            cargo install tauri-cli
          fi
          if ( trunk --help )
          then
            echo "trunk already installed"
          else
            cargo install trunk
          fi
          if ( bonnie --help )
          then
            echo "bonnie already installed"
          else
            cargo install bonnie
          fi
          if (wasm-opt --help )
          then
            echo "wasm-opt already installed"
          else
            cargo install wasm-opt
          fi
          if ( twiggy --help )
          then
            echo "twiggy already installed"
          else
            cargo install twiggy
          fi
          if ( wasm-snip --help )
          then
            echo "wasm-snip already installed"
          else
            cargo install wasm-snip
          fi

      - name: rustup target add wasm32-unknown-unknown
        run: rustup target add wasm32-unknown-unknown

      - name: Set up pnpm package manager
        uses: pnpm/action-setup@v2
        with:
          version: latest
      
      - name: set up tailwindcss 
        run: pnpm install tailwindcss@latest

      - name: Create empty 'dist' directory
        run: mkdir dist

      - name: bonnie build
        run: bonnie build frontend

      - if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-prerelease
          path: ./target/release/bundle/dmg

      - if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-prerelease
          path: ./target/release/bundle/deb/